# Core Concepts (13%)

# 1. List all namespaces in cluster
kubectl get ns
# Answer: kubectl get ns

# 2. List all pods in all namespaces
kubectl get po --all-namespaces
# Answer: kubectl get po --all-namespaces

# 3. List all pods in particular namespace
kubectl get po --namespace=kube-system
# Answer: kubectl get po -n kube-system

# 4. List all services in particular namespace
kubectl get svc --namespace=kube-system
# Answer: kubectl get svc -n kube-system

# 5. List all pods showing name and namespace with jsonpath expression
kubectl get po --all-namespaces --output=jsonpath="{.items[*]['metadata.name', 'metadata.namespace']}"
# Answer: kubectl get pods -o=jsonpath="{.items[*]['metadata.name', 'metadata.namespace']}"

# 5.a. List all pods showing name and namespace with custom columns
kubectl get po --all-namespaces --output=custom-columns="Name:.metadata.name,Namespace:.metadata.namespace"

# 6. Create nginx pod in default namespace and verify pod is running
kubectl run nginx --image=nginx --generator=run-pod/v1 && \
kubectl wait --for=condition=ready po/nginx && \
kubectl get po/nginx
# Answer: kubectl run nginx --image=nginx --restart=Never && \
kubectl get po

# 7. Create same nginx pod with yaml file
kubectl run nginx --image=nginx --generator=run-pod/v1 --dry-run --output=yaml > nginx.yaml && \
kubectl create --filename=nginx.yaml && \
kubectl wait --for=condition=ready po/nginx && \
kubectl get po/nginx
# Answer: kubectl run nginx --image=nginx --restart=Never --dry-run -o yaml > nginx.yaml && \
kubectl create -f nginx.yaml

# 8. Output yaml file of pod just created
kubectl get po/nginx --output=yaml
# Answer: kubectl get po nginx -o yaml

# 9. Output yaml file of pod just created without the cluster-specific information
kubectl get po/nginx --output=yaml --export
# Answer: kubectl get po nginx -o yaml --export

# 10. Get all details of pod just created
kubectl describe po/nginx
# Answer: kubectl describe po nginx

# 10.a. Get all details of pod just created with file
kubectl describe --filename=nginx.yaml

# 11. Delete pod just created
kubectl delete po/nginx && \
kubectl get po
# Answer: kubectl delete po nginx

# 11.a. Delete pod just created with file
kubectl delete --filename=nginx.yaml && \
kubectl get po
# Answer: kubectl delete -f nginx.yaml

# 12. Delete pod just created without waiting
kubectl delete po/nginx --grace-period=0 --force && \
kubectl get po
# Answer: kubectl delete po nginx --grace-period=0 --force

# 13. Create nginx pod with version 1.17.4 and expose it on port 80
kubectl run nginx --image=nginx:1.17.4 --generator=run-pod/v1 --port=80 && \
kubectl wait --for=condition=ready po/nginx && \
kubectl get po/nginx
# Answer: kubectl run nginx --image=nginx:1.17.4 --restart=Never --port=80

# 13.a. Verify pod just created is responding 
export POD_IP=$(kubectl get po/nginx --output=jsonpath='{.status.podIPs[0].ip}') && \
echo $POD_IP

export POD_PORT=$(kubectl get po/nginx --output=jsonpath='{.spec.containers[0].ports[0].containerPort}') && \
echo $POD_PORT

curl --silent $POD_IP:$POD_PORT

# 14. Change image in pod just created to 1.15-alpine and verify image version is updated
kubectl set image po/nginx nginx=1.15-alpine && \
kubectl wait --for=condition=ready po/nginx && \
kubectl get po/nginx --output=jsonpath='{"Image: "}{.spec.containers[0].image}{"\n"}'
# Answer: kubectl set image pod/nginx nginx=nginx:1.15-alpine && \
kubectl describe po nginx

kubectl patch po/nginx nginx=1.15-alpine

# 15. Change image in pod just created to nginx:1.17.1 and observe changes
kubectl set image po/nginx nginx=nginx:1.17.1 && \
kubectl get po/nginx --watch

16. Check image without describe command

17. Create nginx pod and execute simple shell

18. Get IP address of pod just created

19. Create busybox pod and run ls command while creating it and check the logs

20. If pod crashed, check the previous logs of pod

21. Create busybox pod with sleep 3600 command

22. Check connection of nginx pod from busybox pod

23. Create busybox pod with echo command, ‘How are you’, and delete pod manually

24. Create busybox pod with echo command, ‘How are you’, and delete pod immediately

25. Create nginx pod with different levels of verbosity

26. Show nginx pod with custom columns POD_NAME and POD_STATUS

27. List all pods sorted by name

28. List all pods sorted by created timestamp

echo ===> Multi-Container Pods (10%)
echo ===> Pod Design (20%)
echo ===> State Persistence (8%)
echo ===> Configuration (18%)
echo ===> Observability (18%)
echo ===> Services and Networking (13%)
