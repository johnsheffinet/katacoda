# Core Concepts (13%)

# 1. List all namespaces in cluster
kubectl get ns

# 2. List all pods in all namespaces
kubectl get po --all-namespaces

# 3. List all  pods in particular namespace
kubectl get po --namespace=kube-system

# 4. List all services in particular namespace
kubectl get svc --namespace=kube-system

# 5. List all pods showing name and namespace with jsonpath expression
kubectl get po --all-namespaces --output=jsonpath="{.items[*]['metadata.name','metadata.namespace']}"

# 5.a. List all pods showing name and namespace with custom columns
kubectl get po --all-namespaces --output=custom-columns="Name:.metadata.name,Namespace:.metadata.namespace"

# 6. Create nginx pod in default namespace and verify pod is running
kubectl run nginx --image=nginx --generator=run-pod/v1 && \
kubectl wait --for=condition=ready po/nginx && \
kubectl get po/nginx

# 7. Create same nginx pod with yaml file
kubectl run nginx --image=nginx --generator=run-pod/v1 --dry-run --output=yaml > nginx.yaml && \
kubectl create --filename=nginx.yaml && \
kubectl wait --for=condition=ready po/nginx && \
kubectl get po/nginx

# 8. Output yaml file of pod just created
kubectl get po/nginx --output=yaml

# 9. Output yaml file of pod just created without the cluster-specific information
kubectl get po/nginx --output=yaml --export

10. Get all details of pod just created
kubectl describe po/nginx

# 11. Delete pod just created
kubectl delete po/nginx

# 12. Delete the pod you just created without any delay (force delete)

13. Create the nginx pod with version 1.17.4 and expose it on port 80

14. Change the Image version to 1.15-alpine for the pod you just created and verify the image version is updated

15. Change the Image version back to 1.17.1 for the pod you just updated and observe the changes

16. Check the Image version without the describe command

17. Create the nginx pod and execute the simple shell on the pod

18. Get the IP Address of the pod you just created

19. Create a busybox pod and run command ls while creating it and check the logs

20. If pod crashed check the previous logs of the pod

21. Create a busybox pod with command sleep 3600

22. Check the connection of the nginx pod from the busybox pod

23. Create a busybox pod and echo message ‘How are you’ and delete it manually

24. Create a busybox pod and echo message ‘How are you’ and have it deleted immediately

25. Create an nginx pod and list the pod with different levels of verbosity

26. List the nginx pod with custom columns POD_NAME and POD_STATUS

27. List all the pods sorted by name

28. List all the pods sorted by created timestamp

echo ===> Multi-Container Pods (10%)
echo ===> Pod Design (20%)
echo ===> State Persistence (8%)
echo ===> Configuration (18%)
echo ===> Observability (18%)
echo ===> Services and Networking (13%)
