# Deploy Containers Using Kubectl

# Step 1 - Launch Cluster
minikube version && minikube start

kubectl version --short && kubectl cluster-info

kubectl get cs

kubectl describe cs

kubectl get no

kubectl describe no

# Step 2 - Create Namespace
kubectl create ns bootcamp

kubectl describe ns/bootcamp

# Step 3 - Create Deploy
kubectl create deploy kubernetes-bootcamp \
--image=gcr.io/google-samples/kubernetes-bootcamp:v1 \
--namespace=bootcamp

kubectl describe deploy,po \
--namespace bootcamp

# Step 4 - Expose Deploy
kubectl expose deploy/kubernetes-bootcamp \
--type=NodePort \
--port=8000 \
--target-port=8080 \
--namespace=bootcamp

kubectl describe svc \
--namespace bootcamp

export NODE_PORT=$(kubectl get svc --namespace=bootcamp --output=jsonpath='{.items[*].spec.ports[0].nodePort}') && echo $NODE_PORT

curl $(minikube ip):$NODE_PORT

export SVC_IP=$(kubectl get svc --namespace=bootcamp --output=jsonpath='{.items[*].spec.clusterIP}') && echo $SVC_IP

curl $SVC_IP:8000

export $POD_IP=$(kubectl get po --namespace=bootcamp --output=jsonpath='{.items[*].status.podIP}') && echo $POD_IP

curl $POD_IP:8080

# Step 5 - Scale Deploy
kubectl scale deploy/kubernetes-bootcamp \
--replicas=3 \
--namespace=bootcamp

kubectl get deploy \
--namespace=bootcamp

curl $(minikube ip):$NODE_PORT

# Step 5 - Create, Expose & Scale Deploy
kubectl run http1 \
--image=gcr.io/google-samples/kubernetes-bootcamp:v1 \
--replicas=3 \
--expose=true \
--port=80

kubectl get deploy,po,svc

curl http://$EXTERNAL_IP:8080
