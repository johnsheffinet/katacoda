# Liveness and Readiness Healthchecks

# Step 1 - Launch Cluster
cat << EOF >> deploy.yaml
kind: List
apiVersion: v1
items:
- kind: ReplicationController
  apiVersion: v1
  metadata:
    name: frontend
    labels:
      name: frontend
  spec:
    replicas: 1
    selector:
      name: frontend
    template:
      metadata:
        labels:
          name: frontend
      spec:
        containers:
        - name: frontend
          image: katacoda/docker-http-server:health
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 1
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 1
            timeoutSeconds: 1
- kind: ReplicationController
  apiVersion: v1
  metadata:
    name: bad-frontend
    labels:
      name: bad-frontend
  spec:
    replicas: 1
    selector:
      name: bad-frontend
    template:
      metadata:
        labels:
          name: bad-frontend
      spec:
        containers:
        - name: bad-frontend
          image: katacoda/docker-http-server:unhealthy
          readinessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 1
            timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /
              port: 80
            initialDelaySeconds: 1
            timeoutSeconds: 1
- kind: Service
  apiVersion: v1
  metadata:
    labels:
      app: frontend
      kubernetes.io/cluster-service: "true"
    name: frontend
  spec:
    type: NodePort
    ports:
    - port: 80
      nodePort: 30080
    selector:
      app: frontend
EOF

kubectl apply -f deploy.yaml

kubectl get rc

kubectl get po

kubectl get svc

# Step 2 - Readiness Probe
kubectl get pods --selector="name=bad-frontend"

pod=$(kubectl get pods --selector="name=bad-frontend" --output=jsonpath={.items..metadata.name})

kubectl describe pod $pod

kubectl get pods --selector="name=frontend"

# Step 3 - Liveness Probe
kubectl get pods --selector="name=frontend"

pod=$(kubectl get pods --selector="name=frontend" --output=jsonpath={.items..metadata.name})

kubectl exec $pod -- /usr/bin/curl -s localhost/unhealthy

kubectl get pods --selector="name=frontend"
